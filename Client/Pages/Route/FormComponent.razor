@inject HttpClient _client

<EditForm Model="@Route" OnValidSubmit="@OnValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <fieldset disabled="@Disabled">
        <div class="form-group">
            <label>Country:</label>
            <div>
                <InputText @bind-Value="route.Country" class="form-control">
                    <option value="">-- Select Country --</option>
                    @if (Route != null)
                {
                    foreach (var route in Route)
                    {
                    <option value="@route.ID">@route.Country</option>
            }

        }
               
        }
                </InputText>
                <ValidationMessage For="@(() => route.Country)" />
            </div>
        </div>
         <div class="form-group">
            <label>Price:</label>
            <div>
                <InputText @bind-Value="route.Price" class="form-control">
                    <option value="">-- Select Country --</option>
                    @if (Route != null)
                {
                    foreach (var route in Route)
                    {
                    <option value="@route.ID">@route.Price</option>
            }

        }
               
        }
                </InputText>
                <ValidationMessage For="@(() => route.Price)" />
            </div>
        </div>
        <div class="form-group">
            <label>Number of travellers:</label>
            <div>
                <InputText @bind-Value="route.NoOfTravellers" class="form-control">
                    <option value="">-- Select number of travellers --</option>
                    @if (Route != null)
                {
                    foreach (var route in Route)
                    {
                    <option value="@route.ID">@route.NoOfTravellers</option>
            }

        }
               
        }
                </InputText>
                <ValidationMessage For="@(() => route.NoOfTravellers)" />
            </div>
        </div>
        <div class="form-group">
            <label>Length of trip:</label>
            <div>
                <InputText @bind-Value="route.LengthOfTrip" class="form-control">
                    <option value="">-- Select length of trip --</option>
                    @if (Route != null)
                {
                    foreach (var route in Route)
                    {
                    <option value="@route.ID">@route.LengthOfTrip</option>
            }

        }
               
        }
                </InputText>
                <ValidationMessage For="@(() => route.LengthOfTrip)" />
            </div>
        </div>
    </fieldset>

    @if (!Disabled)
    {
        <button type="submit" class="btn btn-success btn-block">
            @ButtonText
        </button>
    }
    <BackToList Target="routes" />
</EditForm>

@code {
    [Parameter] public bool Disabled { get; set; } = false;
    [Parameter] public Route route { get; set; }
    [Parameter] public string ButtonText { get; set; } = "Save";
    [Parameter] public EventCallback OnValidSubmit { get; set; }

    private IList<Route> Route;
    

    protected async override Task OnInitializedAsync()
    {
        Route = await _client.GetFromJsonAsync<List<Route>>($"api/Routes");
        //booking.DateOut = DateTime.Now;
    }
}